-- This script creates a full schema with 7 tables for different lego attributes with primary and foreign keys

-- Create SCHEMA in TIL_PORTFOLIO_PROJECTS database
CREATE SCHEMA TIL_PORTFOLIO_PROJECTS.JAMES_C;

-- Check data in staging schema
select * from TIL_PORTFOLIO_PROJECTS.STAGING.LEGO_SETS
limit 100;

-- Create Color Table in JAMES Schema
CREATE OR REPLACE TABLE TIL_PORTFOLIO_PROJECTS.JAMES_C.LEGO_COLORS (
    ID NUMBER(38,0),
    NAME VARCHAR(28),
    RGB VARCHAR(6),
    IS_TRANS VARCHAR(1)
);

-- Create Inventories Table in JAMES Schema
CREATE OR REPLACE TABLE TIL_PORTFOLIO_PROJECTS.JAMES_C.LEGO_INVENTORIES (
    ID NUMBER(38,0),
    VERSION NUMBER(38,0),
    SET_NUM VARCHAR(16)
);

-- Create Inventory Parts Table in JAMES Schema
CREATE OR REPLACE TABLE TIL_PORTFOLIO_PROJECTS.JAMES_C.LEGO_INVENTORY_PARTS (
    INVENTORY_ID NUMBER(38,0),
    PART_NUM VARCHAR(15),
    COLOR_ID NUMBER(38,0),
    QUANTITY NUMBER(38,0),
    IS_SPARE VARCHAR(1)
);

-- Create Inventory Sets Table in JAMES Schema
CREATE OR REPLACE TABLE TIL_PORTFOLIO_PROJECTS.JAMES_C.LEGO_INVENTORY_SETS (
    INVENTORY_ID NUMBER(38,0),
    SET_NUM VARCHAR(16),
    QUANTITY NUMBER(38,0)
);

-- Create Parts Table in JAMES Schema
CREATE OR REPLACE TABLE TIL_PORTFOLIO_PROJECTS.JAMES_C.LEGO_PARTS (
    PART_NUM VARCHAR(15),
    NAME VARCHAR(223),
    PART_CAT_ID NUMBER(38,0)
);    

-- Create Part Categories Table in JAMES Schema
CREATE OR REPLACE TABLE TIL_PORTFOLIO_PROJECTS.JAMES_C.LEGO_PART_CATEGORIES (
    ID NUMBER(38,0),
    NAME VARCHAR(44)
);

-- Create Lego Sets Table in JAMES Schema
CREATE OR REPLACE TABLE TIL_PORTFOLIO_PROJECTS.JAMES_C.LEGO_SETS (
    SET_NUM VARCHAR(16),
    NAME VARCHAR(95),
    YEAR NUMBER(38,0),
    THEME_ID NUMBER(38,0),
    NUM_PARTS NUMBER(38,0)
);

--Create Lego Themes Table in JAMES Schema
CREATE OR REPLACE TABLE TIL_PORTFOLIO_PROJECTS.JAMES_C.LEGO_THEMES (
    ID NUMBER(38,0),
	NAME VARCHAR(32),
	PARENT_ID NUMBER(38,0)
);

-- Insert record into all new JAMES Schema from Staging tables

INSERT INTO TIL_PORTFOLIO_PROJECTS.JAMES_C.LEGO_COLORS (
SELECT *
FROM TIL_PORTFOLIO_PROJECTS.STAGING.LEGO_COLORS
);

INSERT INTO TIL_PORTFOLIO_PROJECTS.JAMES_C.LEGO_INVENTORIES (
SELECT * 
FROM TIL_PORTFOLIO_PROJECTS.STAGING.LEGO_INVENTORIES
);

INSERT INTO TIL_PORTFOLIO_PROJECTS.JAMES_C.LEGO_INVENTORY_PARTS (
SELECT *
FROM TIL_PORTFOLIO_PROJECTS.STAGING.LEGO_INVENTORY_PARTS
);

INSERT INTO TIL_PORTFOLIO_PROJECTS.JAMES_C.LEGO_INVENTORY_SETS (
SELECT *
FROM TIL_PORTFOLIO_PROJECTS.STAGING.LEGO_INVENTORY_SETS
);

INSERT INTO TIL_PORTFOLIO_PROJECTS.JAMES_C.LEGO_PARTS (
SELECT * 
FROM TIL_PORTFOLIO_PROJECTS.STAGING.LEGO_PARTS
);

INSERT INTO TIL_PORTFOLIO_PROJECTS.JAMES_C.LEGO_PART_CATEGORIES (
SELECT *
FROM TIL_PORTFOLIO_PROJECTS.STAGING.LEGO_PART_CATEGORIES
);

INSERT INTO TIL_PORTFOLIO_PROJECTS.JAMES_C.LEGO_SETS (
SELECT *
FROM TIL_PORTFOLIO_PROJECTS.STAGING.LEGO_SETS
);

INSERT INTO TIL_PORTFOLIO_PROJECTS.JAMES_C.LEGO_THEMES (
SELECT *
FROM TIL_PORTFOLIO_PROJECTS.STAGING.LEGO_THEMES
);

-- Primary key ID
-- No Foreign
select *
from TIL_PORTFOLIO_PROJECTS.JAMES_C.LEGO_COLORS
limit 100;

-- Primary key ID
-- Foreign Key SET_NUM -> SETS: SET_NUM
select *
from TIL_PORTFOLIO_PROJECTS.JAMES_C.LEGO_INVENTORIES
limit 100;

-- No Primary
-- Foreign Key INVENTORY_ID -> INVENTORIES: ID
-- Foreign Key PART_NUM -> PARTS: PART_NUM 
-- Foreign Key COLOR_ID -> COLORS: ID
select *
from TIL_PORTFOLIO_PROJECTS.JAMES_C.LEGO_INVENTORY_PARTS
limit 100;

-- No Primary
-- Foreign Key INVENTORY_ID -> INVENTORIES: ID
-- Foreign Key SET_NUM -> SETS: SET_NUM
select *
from TIL_PORTFOLIO_PROJECTS.JAMES_C.LEGO_INVENTORY_SETS
limit 100;

-- Primary key PART_NUM
-- Foreign Key PART_CAT_ID -> PART_CATEGORIES: ID
select *
from TIL_PORTFOLIO_PROJECTS.JAMES_C.LEGO_PARTS
limit 100;

-- Primary key ID
-- No Foreign
select *
from TIL_PORTFOLIO_PROJECTS.JAMES_C.LEGO_PART_CATEGORIES
limit 100;

-- Primary key SET_NUM
-- Foreign Key THEME_ID -> THEMES: ID
select *
from TIL_PORTFOLIO_PROJECTS.JAMES_C.LEGO_SETS
limit 100;

-- Primary Key ID
select *
from TIL_PORTFOLIO_PROJECTS.JAMES_C.LEGO_THEMES
limit 100;

-- Add Primary Keys
ALTER TABLE TIL_PORTFOLIO_PROJECTS.JAMES_C.LEGO_COLORS ADD PRIMARY KEY (ID);
ALTER TABLE TIL_PORTFOLIO_PROJECTS.JAMES_C.LEGO_INVENTORIES ADD PRIMARY KEY (ID);
ALTER TABLE TIL_PORTFOLIO_PROJECTS.JAMES_C.LEGO_PARTS ADD PRIMARY KEY (PART_NUM);
ALTER TABLE TIL_PORTFOLIO_PROJECTS.JAMES_C.LEGO_PART_CATEGORIES ADD PRIMARY KEY (ID);
ALTER TABLE TIL_PORTFOLIO_PROJECTS.JAMES_C.LEGO_SETS ADD PRIMARY KEY (SET_NUM);
ALTER TABLE TIL_PORTFOLIO_PROJECTS.JAMES_C.LEGO_THEMES ADD PRIMARY KEY (ID);

-- Add Foreign Keys
ALTER TABLE TIL_PORTFOLIO_PROJECTS.JAMES_C.LEGO_INVENTORIES ADD FOREIGN KEY (SET_NUM)
REFERENCES TIL_PORTFOLIO_PROJECTS.JAMES_C.LEGO_SETS (SET_NUM);

ALTER TABLE TIL_PORTFOLIO_PROJECTS.JAMES_C.LEGO_INVENTORY_PARTS ADD FOREIGN KEY (INVENTORY_ID)
REFERENCES TIL_PORTFOLIO_PROJECTS.JAMES_C.LEGO_INVENTORIES (ID);

ALTER TABLE TIL_PORTFOLIO_PROJECTS.JAMES_C.LEGO_INVENTORY_PARTS ADD FOREIGN KEY (PART_NUM)
REFERENCES TIL_PORTFOLIO_PROJECTS.JAMES_C.LEGO_PARTS (PART_NUM);

ALTER TABLE TIL_PORTFOLIO_PROJECTS.JAMES_C.LEGO_INVENTORY_PARTS ADD FOREIGN KEY (COLOR_ID)
REFERENCES TIL_PORTFOLIO_PROJECTS.JAMES_C.LEGO_COLORS (ID);

ALTER TABLE TIL_PORTFOLIO_PROJECTS.JAMES_C.LEGO_INVENTORY_SETS ADD FOREIGN KEY (INVENTORY_ID)
REFERENCES TIL_PORTFOLIO_PROJECTS.JAMES_C.LEGO_INVENTORIES (ID);

ALTER TABLE TIL_PORTFOLIO_PROJECTS.JAMES_C.LEGO_INVENTORY_SETS ADD FOREIGN KEY (SET_NUM)
REFERENCES TIL_PORTFOLIO_PROJECTS.JAMES_C.LEGO_SETS (SET_NUM);

ALTER TABLE TIL_PORTFOLIO_PROJECTS.JAMES_C.LEGO_PARTS ADD FOREIGN KEY (PART_CAT_ID)
REFERENCES TIL_PORTFOLIO_PROJECTS.JAMES_C.LEGO_PART_CATEGORIES (ID);

ALTER TABLE TIL_PORTFOLIO_PROJECTS.JAMES_C.LEGO_SETS ADD FOREIGN KEY (THEME_ID)
REFERENCES TIL_PORTFOLIO_PROJECTS.JAMES_C.LEGO_THEMES (ID);
